// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using plathora.Persistence;

namespace plathora.Persistence.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20201226105504_add dashboardTable table ")]
    partial class adddashboardTabletable
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");

                    b.HasDiscriminator<string>("Discriminator").HasValue("IdentityUser");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("plathora.Entity.AboutUs", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AboutUsText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PurposeoftheCompany")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("img")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("AboutUs");
                });

            modelBuilder.Entity("plathora.Entity.Advertise", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("gst")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("img")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isactive")
                        .HasColumnType("bit");

                    b.Property<bool>("isdeleted")
                        .HasColumnType("bit");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("period")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("Advertise");
                });

            modelBuilder.Entity("plathora.Entity.AffilatePackage", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("amount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("commissionid")
                        .HasColumnType("int");

                    b.Property<decimal>("gst")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<bool>("isactive")
                        .HasColumnType("bit");

                    b.Property<bool>("isdeleted")
                        .HasColumnType("bit");

                    b.Property<int>("membershipid")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("commissionid");

                    b.HasIndex("membershipid");

                    b.ToTable("AffilatePackage");
                });

            modelBuilder.Entity("plathora.Entity.AffiltateRegistration", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DOB")
                        .HasColumnType("datetime2");

                    b.Property<int>("Membershipid")
                        .HasColumnType("int");

                    b.Property<string>("Website")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("accountname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("accountno")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("adharcardno")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("adharcardphoto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("amount")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("bankname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("branch")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("cityid")
                        .HasColumnType("int");

                    b.Property<string>("companyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("createddate")
                        .HasColumnType("datetime2");

                    b.Property<string>("designation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("deviceid")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("emailid1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("emailid2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("gstno")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("house")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ifsccode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isactive")
                        .HasColumnType("bit");

                    b.Property<bool>("isdeleted")
                        .HasColumnType("bit");

                    b.Property<string>("landmark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("latitude")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("longitude")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("mobileno1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("mobileno2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("pancardno")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("pancardphoto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("passbookphoto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("profilephoto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("registerbyAffilateID")
                        .HasColumnType("int");

                    b.Property<string>("street")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("zipcode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("Membershipid");

                    b.HasIndex("cityid");

                    b.ToTable("affiltateRegistrations");
                });

            modelBuilder.Entity("plathora.Entity.BankRegistration", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("isactive")
                        .HasColumnType("bit");

                    b.Property<bool>("isdeleted")
                        .HasColumnType("bit");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("BankRegistration");
                });

            modelBuilder.Entity("plathora.Entity.BusinessOwnerRegi", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BusinessPackageId")
                        .HasColumnType("int");

                    b.Property<int>("CallCount")
                        .HasColumnType("int");

                    b.Property<DateTime>("Expirydate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FridayClose")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FridayOpen")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MondayClose")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MondayOpen")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PaymentAmount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("PaymentStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Regcertificate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Registrationdate")
                        .HasColumnType("datetime2");

                    b.Property<int>("SMSCount")
                        .HasColumnType("int");

                    b.Property<string>("SaturdayClose")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SaturdayOpen")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ShareCount")
                        .HasColumnType("int");

                    b.Property<string>("SundayClose")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SundayOpen")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ThursdayClose")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ThursdayOpen")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TransactionId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TuesdayClose")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TuesdayOpen")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Website")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WednesdayClose")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WednesdayOpen")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("WhatssappCount")
                        .HasColumnType("int");

                    b.Property<string>("businessOperation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("businessType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("businessid")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("cityid")
                        .HasColumnType("int");

                    b.Property<string>("companyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("customerid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("facebookLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("googleplusLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("gstno")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("house")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("instagramLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("landmark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("latitude")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lic")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("linkedinLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("longitude")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("productid")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("registerbyAffilateUniqueId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("sliderimg1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("sliderimg2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("sliderimg3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("sliderimg4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("sliderimg5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("street")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("twitterLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("youtubeLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("zipcode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("BusinessPackageId");

                    b.HasIndex("cityid");

                    b.HasIndex("customerid");

                    b.ToTable("BusinessOwnerRegi");
                });

            modelBuilder.Entity("plathora.Entity.BusinessPackage", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("gst")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<bool>("isactive")
                        .HasColumnType("bit");

                    b.Property<bool>("isdeleted")
                        .HasColumnType("bit");

                    b.Property<string>("period")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("pkgId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("pkgId");

                    b.ToTable("BusinessPackage");
                });

            modelBuilder.Entity("plathora.Entity.BusinessRegistration", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("img")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isactive")
                        .HasColumnType("bit");

                    b.Property<bool>("isdeleted")
                        .HasColumnType("bit");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("photo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("sectorid")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("sectorid");

                    b.ToTable("BusinessRegistration");
                });

            modelBuilder.Entity("plathora.Entity.CityRegistration", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("cityName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isactive")
                        .HasColumnType("bit");

                    b.Property<bool>("isdeleted")
                        .HasColumnType("bit");

                    b.Property<int>("stateid")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("stateid");

                    b.ToTable("cityRegistrations");
                });

            modelBuilder.Entity("plathora.Entity.ContactUs", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mobileno")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("ContactUs");
                });

            modelBuilder.Entity("plathora.Entity.CountryRegistration", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("countrycode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("countryname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isactive")
                        .HasColumnType("bit");

                    b.Property<bool>("isdeleted")
                        .HasColumnType("bit");

                    b.HasKey("id");

                    b.ToTable("CountryRegistrations");
                });

            modelBuilder.Entity("plathora.Entity.CustomerRegistration", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DOB")
                        .HasColumnType("datetime2");

                    b.Property<string>("address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("createddate")
                        .HasColumnType("datetime2");

                    b.Property<string>("deviceid")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("emailid1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isactive")
                        .HasColumnType("bit");

                    b.Property<bool>("isdeleted")
                        .HasColumnType("bit");

                    b.Property<string>("latitude")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("longitude")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("mobileno1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("mobileno2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("profilephoto")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("CustomerRegistration");
                });

            modelBuilder.Entity("plathora.Entity.Membership", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("amount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("gst")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<bool>("isactive")
                        .HasColumnType("bit");

                    b.Property<bool>("isdeleted")
                        .HasColumnType("bit");

                    b.Property<string>("membershipName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("period")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Membership");
                });

            modelBuilder.Entity("plathora.Entity.ModuleMaster", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("amount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<bool>("isactive")
                        .HasColumnType("bit");

                    b.Property<bool>("isdeleted")
                        .HasColumnType("bit");

                    b.HasKey("id");

                    b.ToTable("moduleMasters");
                });

            modelBuilder.Entity("plathora.Entity.News", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("createddate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("date1")
                        .HasColumnType("datetime2");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("img")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isactive")
                        .HasColumnType("bit");

                    b.Property<bool>("isdeleted")
                        .HasColumnType("bit");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("News");
                });

            modelBuilder.Entity("plathora.Entity.PackageRegistration", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("isactive")
                        .HasColumnType("bit");

                    b.Property<bool>("isdeleted")
                        .HasColumnType("bit");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("PackageRegistration");
                });

            modelBuilder.Entity("plathora.Entity.ProductMaster", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("businessid")
                        .HasColumnType("int");

                    b.Property<string>("img")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isactive")
                        .HasColumnType("bit");

                    b.Property<bool>("isdeleted")
                        .HasColumnType("bit");

                    b.Property<string>("productName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("businessid");

                    b.ToTable("ProductMaster");
                });

            modelBuilder.Entity("plathora.Entity.SectorRegistration", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("img")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isactive")
                        .HasColumnType("bit");

                    b.Property<bool>("isdeleted")
                        .HasColumnType("bit");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("photo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("SectorRegistration");
                });

            modelBuilder.Entity("plathora.Entity.StateRegistration", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("StateName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("countryid")
                        .HasColumnType("int");

                    b.Property<bool>("isactive")
                        .HasColumnType("bit");

                    b.Property<bool>("isdeleted")
                        .HasColumnType("bit");

                    b.HasKey("id");

                    b.HasIndex("countryid");

                    b.ToTable("StateRegistrations");
                });

            modelBuilder.Entity("plathora.Entity.Subscribe", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Subscribe");
                });

            modelBuilder.Entity("plathora.Entity.Taluka", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("cityid")
                        .HasColumnType("int");

                    b.Property<bool>("isactive")
                        .HasColumnType("bit");

                    b.Property<bool>("isdeleted")
                        .HasColumnType("bit");

                    b.Property<string>("talukaname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("cityid");

                    b.ToTable("Taluka");
                });

            modelBuilder.Entity("plathora.Entity.Videos", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("fkmoduleid")
                        .HasColumnType("int");

                    b.Property<bool>("isactive")
                        .HasColumnType("bit");

                    b.Property<bool>("isdeleted")
                        .HasColumnType("bit");

                    b.Property<string>("type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("videoLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("videoName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("fkmoduleid");

                    b.ToTable("videos");
                });

            modelBuilder.Entity("plathora.Entity.advertisementInfo", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AfilateuniqueId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Expirydate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("PaymentAmount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("PaymentStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Registrationdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TransactionId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("advertiseid")
                        .HasColumnType("int");

                    b.Property<string>("customerId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("image1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("image2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isdeleted")
                        .HasColumnType("bit");

                    b.Property<string>("longdesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("shortdesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("startdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("videourl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("advertiseid");

                    b.HasIndex("customerId");

                    b.ToTable("advertisementInfos");
                });

            modelBuilder.Entity("plathora.Entity.businessrating", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BusinessOwnerId")
                        .HasColumnType("int");

                    b.Property<string>("CustomerId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isdeleted")
                        .HasColumnType("bit");

                    b.Property<string>("rating")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("businessratings");
                });

            modelBuilder.Entity("plathora.Entity.commission", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("commissionper")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<bool>("isactive")
                        .HasColumnType("bit");

                    b.Property<bool>("isdeleted")
                        .HasColumnType("bit");

                    b.HasKey("id");

                    b.ToTable("commission");
                });

            modelBuilder.Entity("plathora.Entity.distance", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("isactive")
                        .HasColumnType("bit");

                    b.Property<bool>("isdeleted")
                        .HasColumnType("bit");

                    b.Property<decimal>("range")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("id");

                    b.ToTable("distance");
                });

            modelBuilder.Entity("plathora.Entity.emp", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("empname")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("emp");
                });

            modelBuilder.Entity("plathora.Entity.rating", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("affilateid")
                        .HasColumnType("int");

                    b.Property<int?>("customerid")
                        .HasColumnType("int");

                    b.Property<bool>("isactive")
                        .HasColumnType("bit");

                    b.Property<bool>("isdeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ratingg")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("ratings");
                });

            modelBuilder.Entity("plathora.Entity.slider", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("isactive")
                        .HasColumnType("bit");

                    b.Property<bool>("isdeleted")
                        .HasColumnType("bit");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("sliders");
                });

            modelBuilder.Entity("plathora.Entity.social", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("customerid")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("img")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isactive")
                        .HasColumnType("bit");

                    b.Property<bool>("isdeleted")
                        .HasColumnType("bit");

                    b.HasKey("id");

                    b.ToTable("socials");
                });

            modelBuilder.Entity("plathora.Entity.socialdetails", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("LikeCnt")
                        .HasColumnType("int");

                    b.Property<string>("comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("customerid")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isdeleted")
                        .HasColumnType("bit");

                    b.Property<int>("socialid")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("socialdetails");
                });

            modelBuilder.Entity("plathora.Entity.tax", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("isactive")
                        .HasColumnType("bit");

                    b.Property<bool>("isdeleted")
                        .HasColumnType("bit");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("percentage")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("id");

                    b.ToTable("tax");
                });

            modelBuilder.Entity("plathora.Entity.tblfeedback", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("customerid")
                        .HasColumnType("int");

                    b.Property<string>("desc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("img")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isdeleted")
                        .HasColumnType("bit");

                    b.Property<string>("title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("tblfeedback");
                });

            modelBuilder.Entity("plathora.Entity.ApplicationUser", b =>
                {
                    b.HasBaseType("Microsoft.AspNetCore.Identity.IdentityUser");

                    b.Property<int?>("AffilatePackageid")
                        .HasColumnType("int");

                    b.Property<DateTime>("DOB")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MiddleName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PaymentAmount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("PaymentStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TransactionId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("accountname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("accountno")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("adharcardno")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("adharcardphoto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("bankname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("branch")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("cityid")
                        .HasColumnType("int");

                    b.Property<DateTime>("createddate")
                        .HasColumnType("datetime2");

                    b.Property<string>("deviceid")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("emailid2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("house")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ifsccode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isdeleted")
                        .HasColumnType("bit");

                    b.Property<string>("landmark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("latitude")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("loginStatus")
                        .HasColumnType("bit");

                    b.Property<DateTime>("logintime")
                        .HasColumnType("datetime2");

                    b.Property<string>("longitude")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("mobileno2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("pancardno")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("pancardphoto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("passbookphoto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("profilephoto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("registerbyAffilateID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("street")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("uniqueId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("zipcode")
                        .HasColumnType("nvarchar(max)");

                    b.HasIndex("AffilatePackageid");

                    b.HasIndex("cityid");

                    b.HasDiscriminator().HasValue("ApplicationUser");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("plathora.Entity.AffilatePackage", b =>
                {
                    b.HasOne("plathora.Entity.commission", "commission")
                        .WithMany()
                        .HasForeignKey("commissionid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("plathora.Entity.Membership", "Membership")
                        .WithMany()
                        .HasForeignKey("membershipid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("plathora.Entity.AffiltateRegistration", b =>
                {
                    b.HasOne("plathora.Entity.Membership", "Membership")
                        .WithMany()
                        .HasForeignKey("Membershipid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("plathora.Entity.CityRegistration", "CityRegistration")
                        .WithMany()
                        .HasForeignKey("cityid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("plathora.Entity.BusinessOwnerRegi", b =>
                {
                    b.HasOne("plathora.Entity.BusinessPackage", "BusinessPackage")
                        .WithMany()
                        .HasForeignKey("BusinessPackageId");

                    b.HasOne("plathora.Entity.CityRegistration", "CityRegistration")
                        .WithMany()
                        .HasForeignKey("cityid");

                    b.HasOne("plathora.Entity.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("customerid");
                });

            modelBuilder.Entity("plathora.Entity.BusinessPackage", b =>
                {
                    b.HasOne("plathora.Entity.PackageRegistration", "PackageRegistration")
                        .WithMany()
                        .HasForeignKey("pkgId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("plathora.Entity.BusinessRegistration", b =>
                {
                    b.HasOne("plathora.Entity.SectorRegistration", "SectorRegistration")
                        .WithMany()
                        .HasForeignKey("sectorid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("plathora.Entity.CityRegistration", b =>
                {
                    b.HasOne("plathora.Entity.StateRegistration", "StateRegistration")
                        .WithMany()
                        .HasForeignKey("stateid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("plathora.Entity.ProductMaster", b =>
                {
                    b.HasOne("plathora.Entity.BusinessRegistration", "BusinessRegistration")
                        .WithMany()
                        .HasForeignKey("businessid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("plathora.Entity.StateRegistration", b =>
                {
                    b.HasOne("plathora.Entity.CountryRegistration", "CountryRegistration")
                        .WithMany("StateRegistration")
                        .HasForeignKey("countryid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("plathora.Entity.Taluka", b =>
                {
                    b.HasOne("plathora.Entity.CityRegistration", "CityRegistration")
                        .WithMany()
                        .HasForeignKey("cityid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("plathora.Entity.Videos", b =>
                {
                    b.HasOne("plathora.Entity.ModuleMaster", "moduleMaster")
                        .WithMany()
                        .HasForeignKey("fkmoduleid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("plathora.Entity.advertisementInfo", b =>
                {
                    b.HasOne("plathora.Entity.Advertise", "Advertise")
                        .WithMany()
                        .HasForeignKey("advertiseid");

                    b.HasOne("plathora.Entity.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("customerId");
                });

            modelBuilder.Entity("plathora.Entity.ApplicationUser", b =>
                {
                    b.HasOne("plathora.Entity.AffilatePackage", "AffilatePackage")
                        .WithMany()
                        .HasForeignKey("AffilatePackageid");

                    b.HasOne("plathora.Entity.CityRegistration", "CityRegistration")
                        .WithMany()
                        .HasForeignKey("cityid");
                });
#pragma warning restore 612, 618
        }
    }
}
